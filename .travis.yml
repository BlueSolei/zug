language: nix
dist: trusty

matrix:
  include:
    - env: DO=check TYPE=Debug COVERAGE=true
    - env: DO=check TYPE=Debug COMPILER=clang
    - env: DO=check TYPE=Release
    - env: DO=build
    - env: DO=docs

before_install:
  - |
    : ${TYPE:=Debug}
    : ${COMPILER:=gcc}
    function build-p { [[ "${DO}" == build ]]; }
    function check-p { [[ "${DO}" == check ]]; }
    function coverage-p { [[ "${COVERAGE}" == true ]]; }
    function docs-p  { [[ "${DO}" == docs ]]; }
    function with-nix {
        nix-shell --argstr compiler $COMPILER --run "set -e; $1"
    }
    function deploy-p {
        [[ "${TRAVIS_PULL_REQUEST}" == "false" && \
           "${TRAVIS_BRANCH}" == "master" ]]
    }
    function upload-p {
        [[ -n "$encrypted_9275be4a6b94_key" && \
           -n "$encrypted_9275be4a6b94_iv" ]]
    }
    function decrypt-ssh-key {
        openssl aes-256-cbc \
            -K  $encrypted_9275be4a6b94_key \
            -iv $encrypted_9275be4a6b94_iv \
            -in tools/travis/ssh-key.enc \
            -out tools/travis/ssh-key -d
        chmod 600 tools/travis/ssh-key
    }

install:
  - with-nix "echo == nix environment ok"

before_script:
  - |
    with-nix "
        mkdir build && cd build
        cmake .. \
            -DCMAKE_BUILD_TYPE=${TYPE} \
            -DENABLE_COVERAGE=${COVERAGE}
    "

script:
  - |
    set -e
    ! build-p || nix-build
    ! check-p || with-nix "cd build && make -j2 check"
    ! docs-p  || with-nix "cd build && make docs"

after_success:
  - |
    ! coverage-p || with-nix "
        cd build
        find . -name \"*.gcno\" | xargs gcov -bcprs ${PWD}
        bash <(curl -s https://codecov.io/bash) -x gcov
    "
    if upload-p; then
        decrypt-ssh-key
        ! docs-p || ! deploy-p || with-nix "cd build && make upload-docs"
    fi
